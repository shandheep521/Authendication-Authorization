{
	"info": {
		"_postman_id": "f9b6d8e8-7c86-4d4a-8a5e-e2a1e09d0b9a",
		"name": "User-Auth-API",
		"description": "API Documentation for User Authentication and Authorization System with JWT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"register"
							]
						},
						"description": "Register a new user in the system.\n\n**Request Body:**\n- username: String (required, min length: 3)\n- email: String (required, valid email format)\n- password: String (required, min length: 6)\n\n**Response:**\n- 201 Created: User successfully registered\n- 400 Bad Request: Validation errors or user already exists\n- 500 Internal Server Error: Server error"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"User registered successfully\",\n    \"user\": {\n        \"_id\": \"60f7b8a7e6b3d5a0e4d4b0a1\",\n        \"username\": \"testuser\",\n        \"email\": \"test@example.com\",\n        \"role\": \"user\",\n        \"createdAt\": \"2023-05-01T12:00:00.000Z\"\n    }\n}"
						},
						{
							"name": "Error - User Already Exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"User with this email or username already exists\"\n}"
						}
					]
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"login"
							]
						},
						"description": "Authenticate a user and generate JWT token.\n\n**Request Body:**\n- email: String (required, valid email format)\n- password: String (required)\n\n**Response:**\n- 200 OK: User successfully authenticated\n- 401 Unauthorized: Invalid credentials\n- 500 Internal Server Error: Server error"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZjdiOGE3ZTZiM2Q1YTBlNGQ0YjBhMSIsImlhdCI6MTYyMzA2MzAwMCwiZXhwIjoxNjI1NjU1MDAwfQ.7TxHf1qUSVqJGK8qNtPjJg6jL9XQN9HN7gCvvLrAd0c\",\n    \"user\": {\n        \"_id\": \"60f7b8a7e6b3d5a0e4d4b0a1\",\n        \"username\": \"testuser\",\n        \"email\": \"test@example.com\",\n        \"role\": \"user\",\n        \"createdAt\": \"2023-05-01T12:00:00.000Z\"\n    }\n}"
						},
						{
							"name": "Error - Invalid Credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"wrongpassword\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Invalid credentials\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Protected",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Get the authenticated user's profile information.\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**Response:**\n- 200 OK: User profile retrieved\n- 401 Unauthorized: No token or invalid token\n- 404 Not Found: User not found\n- 500 Internal Server Error: Server error"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZjdiOGE3ZTZiM2Q1YTBlNGQ0YjBhMSIsImlhdCI6MTYyMzA2MzAwMCwiZXhwIjoxNjI1NjU1MDAwfQ.7TxHf1qUSVqJGK8qNtPjJg6jL9XQN9HN7gCvvLrAd0c",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}/api/users/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"user\": {\n        \"_id\": \"60f7b8a7e6b3d5a0e4d4b0a1\",\n        \"username\": \"testuser\",\n        \"email\": \"test@example.com\",\n        \"role\": \"user\",\n        \"createdAt\": \"2023-05-01T12:00:00.000Z\"\n    }\n}"
						},
						{
							"name": "Error - No Token",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/api/users/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"message\": \"Not authorized to access this route\"\n}"
						}
					]
				},
				{
					"name": "Update User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updatedusername\",\n    \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"profile"
							]
						},
						"description": "Update the authenticated user's profile information.\n\n**Headers:**\n- Authorization: Bearer {token}\n\n**Request Body:**\n- username: String (optional)\n- email: String (optional)\n- password: String (optional)\n\n**Response:**\n- 200 OK: User profile updated\n- 400 Bad Request: Validation errors\n- 401 Unauthorized: No token or invalid token\n- 404 Not Found: User not found\n- 500 Internal Server Error: Server error"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZjdiOGE3ZTZiM2Q1YTBlNGQ0YjBhMSIsImlhdCI6MTYyMzA2MzAwMCwiZXhwIjoxNjI1NjU1MDAwfQ.7TxHf1qUSVqJGK8qNtPjJg6jL9XQN9HN7gCvvLrAd0c",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"updatedusername\",\n    \"email\": \"updated@example.com\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/users/profile",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"users",
										"profile"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"Profile updated successfully\",\n    \"user\": {\n        \"_id\": \"60f7b8a7e6b3d5a0e4d4b0a1\",\n        \"username\": \"updatedusername\",\n        \"email\": \"updated@example.com\",\n        \"role\": \"user\",\n        \"createdAt\": \"2023-05-01T12:00:00.000Z\"\n    }\n}"
						}
					]
				}
			],
			"description": "These routes require authentication. The JWT token must be included in the Authorization header as a Bearer token."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000",
			"type": "string",
			"description": "Base URL of the API"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string",
			"description": "JWT authentication token"
		}
	]
}
